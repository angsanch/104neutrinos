#!/usr/bin/python3
##
## EPITECH PROJECT, 2023
## 104neutrinos
## File description:
## neurinos maths
##

import sys

def print_help():
    print("USAGE\n\t./104neutrinos n a h sd")
    print("DESCRIPTION\n\tn\tnumber of values")
    print("\ta\tarithmetic mean")
    print("\th\tharmonic mean")
    print("\th\tharmonic mean")
    print("\tsd\tstandard deviation")

def get_data():
    return {"n": int(sys.argv[1]), "a": float(sys.argv[2]),
            "h": float(sys.argv[3]), "sd": float(sys.argv[4]),
            "ms": 0.0}

def think(data, value):
    data['a'] = (data['a'] * data['n'] + value) / (data['n'] + 1)
    deviation = (value - data['a']) ** 2
    data['sd'] = ((((data['sd'] ** 2) * data['n']) + deviation) / (data['n'] + 1)) ** 0.5
    data['h'] = (data['n'] + 1) / (((data['h'] * (1 / data['n'])) ** -1) + (1 / value))
    data['ms'] = ((data['sd'] ** 2) + (data['a']) ** 2) ** 0.5
    data['n'] += 1
    return data

def print_data(data):
    print(f"\tNumber of values:\t{data['n']:d}")
    print(f"\tStandard deviation:\t{data['sd']:.2f}")
    print(f"\tArithmetic mean:\t{data['a']:.2f}")
    print(f"\tRoot mean square:\t{data['ms']:.2f}")
    print(f"\tHarmonic mean:\t\t{data['h']:.2f}")
    print()

def shell():
    comand = ""
    data = get_data()
    comand = input("Enter next value: ")
    while comand != "END":
        data = think(data, float(comand))
        print_data(data)
        comand = input("Enter next value: ")

def main():
    argc = len(sys.argv)
    if argc == 2:
        if sys.argv[1] == "-h":
            print_help()
        else:
            raise Exception("ERROR: Argument not allowed")
    elif argc != 5:
        raise Exception("ERROR: Incorrect number of arguments")
    else:
        shell()

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(e, file=sys.stderr)
        exit(84)
